---

# NGINX

- name: Remove Apache2.
  apt:
    name: apache2
    update_cache: "{{ apt_update_cache }}"
    state: absent

- name: Install NGINX.
  apt:
    name: nginx
    update_cache: "{{ apt_update_cache }}"
    state: present
  notify: start nginx

- name: Adding 'www-data' user to {{ app_group }} group.
  user:
    name: www-data
    groups: "{{ app_group }}"
    append: yes

- name: Generate a Diffie-Hellman group.
  command: openssl dhparam -out /etc/ssl/private/dhparams.pem 2048
  args:
    creates: /etc/ssl/private/dhparam.pem
  when: env != 'dev'

- name: Create {{ app_name }} {{ env }} nginx config.
  template:
    src: nginx/gunicorn_nginx_without_ssl.conf
    dest: /etc/nginx/sites-available/{{ app_project_name }}.conf
    backup: yes
  when: env == 'dev'
  notify: reload nginx

- name: Create {{ app_name }} {{ env }} nginx config.
  template:
    src: nginx/gunicorn_nginx_with_ssl.conf
    dest: /etc/nginx/sites-available/{{ app_project_name }}.conf
    backup: yes
  when: env != 'dev'
  notify: reload nginx

- name: Create {{ app_name }} {{ env }} nginx ssl partial config.
  template:
    src: nginx/nginx_ssl_partial.conf
    dest: /etc/nginx/sites-available/{{ app_project_name }}-ssl.partial.conf
    backup: yes
  when: env != 'dev'
  notify: reload nginx

- name: Enable {{ app_name }} nginx config.
  file:
    src: /etc/nginx/sites-available/{{ app_project_name }}.conf
    dest: /etc/nginx/sites-enabled/{{ app_project_name }}.conf
    state: link
  notify: reload nginx

- name: Disable default nginx config.
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: reload nginx

- include_tasks: certbot.yml
  tags: certbot
  when: env != 'dev'

...
